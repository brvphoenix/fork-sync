name: Sync

on:
  push:

  schedule:
  - cron: "0 23 * * *"

jobs:
  sync:
    name: Sync ${{ matrix.repo }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: [openwrt/openwrt, openwrt/packages, openwrt/luci, qbittorrent/qBittorrent, hanwckf/rt-n56u, hanwckf/mt7615]
    steps:
      - name: Check the Source
        id: check-src
        run: |
          # branches
          remoteBranchesRefs=$(git ls-remote ${GITHUB_SERVER_URL}/${{ matrix.repo }}.git refs/heads/*)
          remoteBranchesHash=$(echo "$remoteBranchesRefs" | cut -f1)
          remoteBranchesLabel=$(echo "$remoteBranchesRefs" | cut -f2 | sed 's/\s*refs\/heads\///g' | sed ':tag;N;$!b tag;s/\n/-/g')
          myBranchesRefs=$(git ls-remote ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY_OWNER}/$(basename ${{ matrix.repo }}).git refs/heads/*)
          myBranchesLabel=
          for hash in $remoteBranchesHash; do
          	mbl=$(echo "$myBranchesRefs" | grep "${hash}" | cut -f2 | sed 's/\s*refs\/heads\///g')
          	[ -n "${myBranchesLabel}" ] && [ -n "$mbl" ] && myBranchesLabel="${myBranchesLabel}-${mbl}"
          	[ -z "${myBranchesLabel}" ] && [ -n "$mbl" ] && myBranchesLabel="${mbl}"
          done

          # tags
          remoteTagsRefs=$(git ls-remote ${GITHUB_SERVER_URL}/${{ matrix.repo }}.git refs/tags/*)
          remoteTagsHash=$(echo "$remoteTagsRefs" | cut -f1)
          remoteTagsLabel=$(echo "$remoteTagsRefs" | cut -f2 | sed 's/\s*refs\/tags\///g' | sed ':tag;N;$!b tag;s/\n/-/g')
          myTagsRefs=$(git ls-remote ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY_OWNER}/$(basename ${{ matrix.repo }}).git refs/tags/*)
          myTagsLabel=
          for hash in $remoteTagsHash; do
          	mtl=$(echo "$myTagsRefs" | grep "${hash}" | cut -f2 | sed 's/\s*refs\/tags\///g')
          	[ -n "${myTagsLabel}" ] && [ -n "$mtl" ] && myTagsLabel="${myTagsLabel}-${mtl}"
          	[ -z "${myTagsLabel}" ] && [ -n "$mtl" ] && myTagsLabel="${mtl}"
          done

          [ -z "$remoteTagsHash" ] && remoteHash=$(echo "${remoteBranchesHash}" | sed ':tag;N;$!b tag;s/\n/-/g') || remoteHash=$(echo "${remoteBranchesHash}-${remoteTagsHash}" | sed ':tag;N;$!b tag;s/\n/-/g')
          [ -z "$remoteTagsLabel" ] && remoteLabel=${remoteBranchesLabel} || remoteLabel=${remoteBranchesLabel}-${remoteTagsLabel}
          [ -z "$myTagsLabel" ] && myLabel=${myBranchesLabel} || myLabel=${myBranchesLabel}-${myTagsLabel}

          [ "$remoteLabel" != "$myLabel" ] && update=1 || update=0
          echo "update=${update}" >> $GITHUB_OUTPUT
          echo "hash=$(echo ${remoteHash} | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT
      - name: Cache Repo
        if: steps.check-src.outputs.update == '1'
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ matrix.repo }}
          key: source-${{ matrix.repo }}-${{ steps.check-src.outputs.hash }}
          restore-keys: |
            source-${{ matrix.repo }}-
      - name: Sync with Source
        if: steps.check-src.outputs.update == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [ -e "${{ matrix.repo }}/.git" ] || git clone ${GITHUB_SERVER_URL}/${{ matrix.repo }} ${{ matrix.repo }}

          cd ${{ matrix.repo }}
          [ -z "$(git remote -v | grep "git://")" ] || git config --local url.${GITHUB_SERVER_URL}/.insteadOf git://github.com/

          git fetch --force --prune --prune-tags origin

          repo_name=$(basename ${{ matrix.repo }})
          [ -n "$(git remote | grep own)" ] && git remote remove own
          git remote add own https://${GITHUB_REPOSITORY_OWNER}:${{ secrets.SUPER_TOKEN }}@github.com/${GITHUB_REPOSITORY_OWNER}/${repo_name}.git

          branches=$(git branch -a | grep -E '^\s+remotes/origin' | grep -v "remotes/origin/HEAD" | sed 's/\s*remotes\/origin\///g')
          default_branch="$(basename $(git symbolic-ref refs/remotes/origin/HEAD))"

          for branch in ${branches}; do
          	git switch -C "$branch" "origin/$branch"
          	git push own $branch
          done

          git push -f --tags own

          git remote remove own
          git switch -C "$default_branch" "origin/$default_branch"

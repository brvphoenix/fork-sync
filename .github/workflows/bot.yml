name: Sync

on:
  push:

  schedule:
  - cron: "0 23 * * *"

jobs:
  sync:
    name: Sync ${{ matrix.repo }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: [openwrt/openwrt, openwrt/packages, openwrt/luci, qbittorrent/qBittorrent, hanwckf/rt-n56u, hanwckf/mt7615]
    steps:
      - name: Check the Source
        id: check-src
        run: |
          remoteHash="$(git ls-remote https://github.com/${{ matrix.repo }}.git HEAD | cut -f 1)"
          myHash="$(git ls-remote https://github.com/brvphoenix/$(basename ${{ matrix.repo }}).git HEAD | cut -f 1)"
          [ "$remoteHash" != "$myHash" ] && update=1 || update=0
          echo "::set-output name=update::${update}"
          echo "::set-output name=hash::${remoteHash}"
      - name: Cache Repo
        if: steps.check-src.outputs.update == '1'
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ matrix.repo }}
          key: source-${{ matrix.repo }}-${{ steps.check-src.outputs.hash }}
          restore-keys: |
            source-${{ matrix.repo }}-
      - name: Sync with Source
        if: steps.check-src.outputs.update == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          [ -e "${{ matrix.repo }}/.git" ] || hub clone ${{ matrix.repo }} ${{ matrix.repo }}
          cd ${{ matrix.repo }}
          hub sync
          [ -n "$(git remote | grep own)" ] && git remote remove own
          repo_name=$(basename ${{ matrix.repo }})
          git remote add own https://brvphoenix:${{ secrets.SUPER_TOKEN }}@github.com/brvphoenix/${repo_name}.git
          hub push own "$(basename $(git symbolic-ref refs/remotes/origin/HEAD))"
          git remote remove own
